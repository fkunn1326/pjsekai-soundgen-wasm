{"message":"`const extern fn` definitions are unstable","code":{"code":"E0658","explanation":"An unstable feature was used.\n\nErroneous code example:\n\n```compile_fail,E0658\n#[repr(u128)] // error: use of unstable library feature 'repr128'\nenum Foo {\n    Bar(u64),\n}\n```\n\nIf you're using a stable or a beta version of rustc, you won't be able to use\nany unstable features. In order to do so, please switch to a nightly version of\nrustc (by using [rustup]).\n\nIf you're using a nightly version of rustc, just add the corresponding feature\nto be able to use it:\n\n```\n#![feature(repr128)]\n\n#[repr(u128)] // ok!\nenum Foo {\n    Bar(u64),\n}\n```\n\n[rustup]: https://rust-lang.github.io/rustup/concepts/channels.html\n"},"level":"error","spans":[{"file_name":"/home/codespace/.cargo/registry/src/github.com-1ecc6299db9ec823/libc-0.2.132/src/macros.rs","byte_start":6665,"byte_end":6798,"line_start":188,"line_end":191,"column_start":17,"column_end":18,"is_primary":true,"text":[{"text":"                pub $($constness)* unsafe extern fn $i($($arg: $argty),*","highlight_start":17,"highlight_end":73},{"text":"                ) -> $ret {","highlight_start":1,"highlight_end":28},{"text":"                    $($body);*","highlight_start":1,"highlight_end":31},{"text":"                }","highlight_start":1,"highlight_end":18}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/codespace/.cargo/registry/src/github.com-1ecc6299db9ec823/libc-0.2.132/src/unix/linux_like/mod.rs","byte_start":53227,"byte_end":54725,"line_start":1499,"line_end":1546,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"f! {","highlight_start":1,"highlight_end":5},{"text":"    pub fn CMSG_FIRSTHDR(mhdr: *const msghdr) -> *mut cmsghdr {","highlight_start":1,"highlight_end":64},{"text":"        if (*mhdr).msg_controllen as usize >= ::mem::size_of::<cmsghdr>() {","highlight_start":1,"highlight_end":76},{"text":"            (*mhdr).msg_control as *mut cmsghdr","highlight_start":1,"highlight_end":48},{"text":"        } else {","highlight_start":1,"highlight_end":17},{"text":"            0 as *mut cmsghdr","highlight_start":1,"highlight_end":30},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    }","highlight_start":1,"highlight_end":6},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    pub fn CMSG_DATA(cmsg: *const cmsghdr) -> *mut ::c_uchar {","highlight_start":1,"highlight_end":63},{"text":"        cmsg.offset(1) as *mut ::c_uchar","highlight_start":1,"highlight_end":41},{"text":"    }","highlight_start":1,"highlight_end":6},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    pub {const} fn CMSG_SPACE(length: ::c_uint) -> ::c_uint {","highlight_start":1,"highlight_end":62},{"text":"        (CMSG_ALIGN(length as usize) + CMSG_ALIGN(::mem::size_of::<cmsghdr>()))","highlight_start":1,"highlight_end":80},{"text":"            as ::c_uint","highlight_start":1,"highlight_end":24},{"text":"    }","highlight_start":1,"highlight_end":6},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    pub fn CMSG_LEN(length: ::c_uint) -> ::c_uint {","highlight_start":1,"highlight_end":52},{"text":"        CMSG_ALIGN(::mem::size_of::<cmsghdr>()) as ::c_uint + length","highlight_start":1,"highlight_end":69},{"text":"    }","highlight_start":1,"highlight_end":6},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    pub fn FD_CLR(fd: ::c_int, set: *mut fd_set) -> () {","highlight_start":1,"highlight_end":57},{"text":"        let fd = fd as usize;","highlight_start":1,"highlight_end":30},{"text":"        let size = ::mem::size_of_val(&(*set).fds_bits[0]) * 8;","highlight_start":1,"highlight_end":64},{"text":"        (*set).fds_bits[fd / size] &= !(1 << (fd % size));","highlight_start":1,"highlight_end":59},{"text":"        return","highlight_start":1,"highlight_end":15},{"text":"    }","highlight_start":1,"highlight_end":6},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    pub fn FD_ISSET(fd: ::c_int, set: *const fd_set) -> bool {","highlight_start":1,"highlight_end":63},{"text":"        let fd = fd as usize;","highlight_start":1,"highlight_end":30},{"text":"        let size = ::mem::size_of_val(&(*set).fds_bits[0]) * 8;","highlight_start":1,"highlight_end":64},{"text":"        return ((*set).fds_bits[fd / size] & (1 << (fd % size))) != 0","highlight_start":1,"highlight_end":70},{"text":"    }","highlight_start":1,"highlight_end":6},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    pub fn FD_SET(fd: ::c_int, set: *mut fd_set) -> () {","highlight_start":1,"highlight_end":57},{"text":"        let fd = fd as usize;","highlight_start":1,"highlight_end":30},{"text":"        let size = ::mem::size_of_val(&(*set).fds_bits[0]) * 8;","highlight_start":1,"highlight_end":64},{"text":"        (*set).fds_bits[fd / size] |= 1 << (fd % size);","highlight_start":1,"highlight_end":56},{"text":"        return","highlight_start":1,"highlight_end":15},{"text":"    }","highlight_start":1,"highlight_end":6},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    pub fn FD_ZERO(set: *mut fd_set) -> () {","highlight_start":1,"highlight_end":45},{"text":"        for slot in (*set).fds_bits.iter_mut() {","highlight_start":1,"highlight_end":49},{"text":"            *slot = 0;","highlight_start":1,"highlight_end":23},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    }","highlight_start":1,"highlight_end":6},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"f!","def_site_span":{"file_name":"/home/codespace/.cargo/registry/src/github.com-1ecc6299db9ec823/libc-0.2.132/src/macros.rs","byte_start":6370,"byte_end":6384,"line_start":180,"line_end":180,"column_start":9,"column_end":23,"is_primary":false,"text":[{"text":"        macro_rules! f {","highlight_start":9,"highlight_end":23}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"see issue #64926 <https://github.com/rust-lang/rust/issues/64926> for more information","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"add `#![feature(const_extern_fn)]` to the crate attributes to enable","code":null,"level":"help","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0658]\u001b[0m\u001b[0m\u001b[1m: `const extern fn` definitions are unstable\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/codespace/.cargo/registry/src/github.com-1ecc6299db9ec823/libc-0.2.132/src/macros.rs:188:17\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m188\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m/\u001b[0m\u001b[0m \u001b[0m\u001b[0m                pub $($constness)* unsafe extern fn $i($($arg: $argty),*\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m189\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                ) -> $ret {\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m190\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                    $($body);*\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m191\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                }\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|_________________^\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0m/home/codespace/.cargo/registry/src/github.com-1ecc6299db9ec823/libc-0.2.132/src/unix/linux_like/mod.rs:1499:1\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1499\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m/\u001b[0m\u001b[0m \u001b[0m\u001b[0mf! {\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1500\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    pub fn CMSG_FIRSTHDR(mhdr: *const msghdr) -> *mut cmsghdr {\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1501\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        if (*mhdr).msg_controllen as usize >= ::mem::size_of::<cmsghdr>() {\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1502\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            (*mhdr).msg_control as *mut cmsghdr\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1545\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    }\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1546\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m}\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|_-\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12min this macro invocation\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: see issue #64926 <https://github.com/rust-lang/rust/issues/64926> for more information\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: add `#![feature(const_extern_fn)]` to the crate attributes to enable\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this error originates in the macro `f` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}
{"message":"`const extern fn` definitions are unstable","code":{"code":"E0658","explanation":"An unstable feature was used.\n\nErroneous code example:\n\n```compile_fail,E0658\n#[repr(u128)] // error: use of unstable library feature 'repr128'\nenum Foo {\n    Bar(u64),\n}\n```\n\nIf you're using a stable or a beta version of rustc, you won't be able to use\nany unstable features. In order to do so, please switch to a nightly version of\nrustc (by using [rustup]).\n\nIf you're using a nightly version of rustc, just add the corresponding feature\nto be able to use it:\n\n```\n#![feature(repr128)]\n\n#[repr(u128)] // ok!\nenum Foo {\n    Bar(u64),\n}\n```\n\n[rustup]: https://rust-lang.github.io/rustup/concepts/channels.html\n"},"level":"error","spans":[{"file_name":"/home/codespace/.cargo/registry/src/github.com-1ecc6299db9ec823/libc-0.2.132/src/macros.rs","byte_start":7134,"byte_end":7260,"line_start":203,"line_end":206,"column_start":17,"column_end":18,"is_primary":true,"text":[{"text":"                pub $($constness)* extern fn $i($($arg: $argty),*","highlight_start":17,"highlight_end":66},{"text":"                ) -> $ret {","highlight_start":1,"highlight_end":28},{"text":"                    $($body);*","highlight_start":1,"highlight_end":31},{"text":"                }","highlight_start":1,"highlight_end":18}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/codespace/.cargo/registry/src/github.com-1ecc6299db9ec823/libc-0.2.132/src/unix/linux_like/mod.rs","byte_start":54727,"byte_end":56294,"line_start":1548,"line_end":1616,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"safe_f! {","highlight_start":1,"highlight_end":10},{"text":"    pub fn SIGRTMAX() -> ::c_int {","highlight_start":1,"highlight_end":35},{"text":"        unsafe { __libc_current_sigrtmax() }","highlight_start":1,"highlight_end":45},{"text":"    }","highlight_start":1,"highlight_end":6},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    pub fn SIGRTMIN() -> ::c_int {","highlight_start":1,"highlight_end":35},{"text":"        unsafe { __libc_current_sigrtmin() }","highlight_start":1,"highlight_end":45},{"text":"    }","highlight_start":1,"highlight_end":6},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    pub {const} fn WIFSTOPPED(status: ::c_int) -> bool {","highlight_start":1,"highlight_end":57},{"text":"        (status & 0xff) == 0x7f","highlight_start":1,"highlight_end":32},{"text":"    }","highlight_start":1,"highlight_end":6},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    pub {const} fn WSTOPSIG(status: ::c_int) -> ::c_int {","highlight_start":1,"highlight_end":58},{"text":"        (status >> 8) & 0xff","highlight_start":1,"highlight_end":29},{"text":"    }","highlight_start":1,"highlight_end":6},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    pub {const} fn WIFCONTINUED(status: ::c_int) -> bool {","highlight_start":1,"highlight_end":59},{"text":"        status == 0xffff","highlight_start":1,"highlight_end":25},{"text":"    }","highlight_start":1,"highlight_end":6},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    pub {const} fn WIFSIGNALED(status: ::c_int) -> bool {","highlight_start":1,"highlight_end":58},{"text":"        ((status & 0x7f) + 1) as i8 >= 2","highlight_start":1,"highlight_end":41},{"text":"    }","highlight_start":1,"highlight_end":6},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    pub {const} fn WTERMSIG(status: ::c_int) -> ::c_int {","highlight_start":1,"highlight_end":58},{"text":"        status & 0x7f","highlight_start":1,"highlight_end":22},{"text":"    }","highlight_start":1,"highlight_end":6},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    pub {const} fn WIFEXITED(status: ::c_int) -> bool {","highlight_start":1,"highlight_end":56},{"text":"        (status & 0x7f) == 0","highlight_start":1,"highlight_end":29},{"text":"    }","highlight_start":1,"highlight_end":6},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    pub {const} fn WEXITSTATUS(status: ::c_int) -> ::c_int {","highlight_start":1,"highlight_end":61},{"text":"        (status >> 8) & 0xff","highlight_start":1,"highlight_end":29},{"text":"    }","highlight_start":1,"highlight_end":6},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    pub {const} fn WCOREDUMP(status: ::c_int) -> bool {","highlight_start":1,"highlight_end":56},{"text":"        (status & 0x80) != 0","highlight_start":1,"highlight_end":29},{"text":"    }","highlight_start":1,"highlight_end":6},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    pub {const} fn W_EXITCODE(ret: ::c_int, sig: ::c_int) -> ::c_int {","highlight_start":1,"highlight_end":71},{"text":"        (ret << 8) | sig","highlight_start":1,"highlight_end":25},{"text":"    }","highlight_start":1,"highlight_end":6},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    pub {const} fn W_STOPCODE(sig: ::c_int) -> ::c_int {","highlight_start":1,"highlight_end":57},{"text":"        (sig << 8) | 0x7f","highlight_start":1,"highlight_end":26},{"text":"    }","highlight_start":1,"highlight_end":6},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    pub {const} fn QCMD(cmd: ::c_int, type_: ::c_int) -> ::c_int {","highlight_start":1,"highlight_end":67},{"text":"        (cmd << 8) | (type_ & 0x00ff)","highlight_start":1,"highlight_end":38},{"text":"    }","highlight_start":1,"highlight_end":6},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    pub {const} fn IPOPT_COPIED(o: u8) -> u8 {","highlight_start":1,"highlight_end":47},{"text":"        o & IPOPT_COPY","highlight_start":1,"highlight_end":23},{"text":"    }","highlight_start":1,"highlight_end":6},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    pub {const} fn IPOPT_CLASS(o: u8) -> u8 {","highlight_start":1,"highlight_end":46},{"text":"        o & IPOPT_CLASS_MASK","highlight_start":1,"highlight_end":29},{"text":"    }","highlight_start":1,"highlight_end":6},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    pub {const} fn IPOPT_NUMBER(o: u8) -> u8 {","highlight_start":1,"highlight_end":47},{"text":"        o & IPOPT_NUMBER_MASK","highlight_start":1,"highlight_end":30},{"text":"    }","highlight_start":1,"highlight_end":6},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    pub {const} fn IPTOS_ECN(x: u8) -> u8 {","highlight_start":1,"highlight_end":44},{"text":"        x & ::IPTOS_ECN_MASK","highlight_start":1,"highlight_end":29},{"text":"    }","highlight_start":1,"highlight_end":6},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"safe_f!","def_site_span":{"file_name":"/home/codespace/.cargo/registry/src/github.com-1ecc6299db9ec823/libc-0.2.132/src/macros.rs","byte_start":6834,"byte_end":6853,"line_start":195,"line_end":195,"column_start":9,"column_end":28,"is_primary":false,"text":[{"text":"        macro_rules! safe_f {","highlight_start":9,"highlight_end":28}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"see issue #64926 <https://github.com/rust-lang/rust/issues/64926> for more information","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"add `#![feature(const_extern_fn)]` to the crate attributes to enable","code":null,"level":"help","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0658]\u001b[0m\u001b[0m\u001b[1m: `const extern fn` definitions are unstable\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/codespace/.cargo/registry/src/github.com-1ecc6299db9ec823/libc-0.2.132/src/macros.rs:203:17\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m203\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m/\u001b[0m\u001b[0m \u001b[0m\u001b[0m                pub $($constness)* extern fn $i($($arg: $argty),*\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m204\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                ) -> $ret {\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m205\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                    $($body);*\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m206\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                }\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|_________________^\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0m/home/codespace/.cargo/registry/src/github.com-1ecc6299db9ec823/libc-0.2.132/src/unix/linux_like/mod.rs:1548:1\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1548\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m/\u001b[0m\u001b[0m \u001b[0m\u001b[0msafe_f! {\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1549\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    pub fn SIGRTMAX() -> ::c_int {\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1550\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        unsafe { __libc_current_sigrtmax() }\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1551\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    }\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1615\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    }\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1616\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m}\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|_-\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12min this macro invocation\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: see issue #64926 <https://github.com/rust-lang/rust/issues/64926> for more information\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: add `#![feature(const_extern_fn)]` to the crate attributes to enable\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this error originates in the macro `safe_f` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}
{"message":"aborting due to 2 previous errors","code":null,"level":"error","spans":[],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror\u001b[0m\u001b[0m\u001b[1m: aborting due to 2 previous errors\u001b[0m\n\n"}
{"message":"For more information about this error, try `rustc --explain E0658`.","code":null,"level":"failure-note","spans":[],"children":[],"rendered":"\u001b[0m\u001b[1mFor more information about this error, try `rustc --explain E0658`.\u001b[0m\n"}
